openapi: "3.0.0"
info:
  title: "Application API"
  description: "News Management"
  version: "v1"
  contact:
    name: "Vlad"
    email: "vlad.brel.97@mail.ru"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0"

servers:
  - url: "http://localhost:8081"
    description: "Service"

tags:
  - name: "News"
    description: "News API for CRUD operations"

components:
  schemas:
    News:
      type: object
      properties:
        idNews:
          type: integer
          format: int64
          example: 1
        dateCreatedNews:
          type: string
          format: data-time
          example: "2022-06-15T17:18:40.115478"
        title:
          type: string
          example: Example title
        text:
          type: string
          example: Example text
        commentList:
          type: array
          items:
            $ref: "#/components/schemas/Comment"

    Comment:
      type: object
      properties:
        idComment:
          type: integer
          format: int64
          example: 1
        dateCreatedComment:
          type: string
          format: data-time
          example: "2022-06-15T17:18:40.115478"
        text:
          type: string
          example: Example text
        idUser:
          type: string
          example: 1

    News_create:
      type: object
      properties:
        title:
          type: string
          example: Example title
        text:
          type: string
          example: Example text
        commentList:
          type: array
          items:
            $ref: "#/components/schemas/Comment_create"

    Comment_create:
      type: object
      properties:
        text:
          type: string
          example: Example text
        idUser:
          type: string
          example: 1

    Pageable_news:
      type: object
      properties:
        page:
          type: integer
          format: int32
          example: 0
          minimum: 0
        size:
          type: integer
          format: int32
          example: 10
          minimum: 1
        sort:
          type: array
          items:
            type: string
            example: idNews

    Pageable_comment:
      type: object
      properties:
        page:
          type: integer
          format: int32
          example: 0
          minimum: 0
        size:
          type: integer
          format: int32
          example: 10
          minimum: 1
        sort:
          type: array
          items:
            type: string
            example: idComment

    200:
      type: object
      properties:
        uri:
          type: string
          example: /api/v1/droids
        info:
          type: string
          example: Droids with id XX is deleted;

    400:
      type: object
      properties:
        uri:
          type: string
          example: /api/v1/droids
        info:
          type: string
          example: Could not execute statement;

    404:
      type: object
      properties:
        uri:
          type: string
          example: /api/v1/droids/1
        info:
          type: string
          example: There is no droid with ID 1

paths:
  /api/v1/news:
    get:
      tags:
        - "News"
      summary: Get all News with their Comments
      parameters:
        - in: query
          name: Pageable
          required: false
          schema:
            $ref: "#/components/schemas/Pageable_news"
          description: For pagination
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/News"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404"

    post:
      tags:
        - "News"
      summary: Save News
      requestBody:
        required: true
        description: "Field commentList is optional, and it can be left empty (\"commentList\": [])"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/News_create"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/News"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"

    put:
      tags:
        - "News"
      summary: Update News
      requestBody:
        required: true
        description: "Field commentList is optional, and it can be left empty (\"commentList\": [])"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/News"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/News"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404"

  /api/v1/news/{idNews}:
    get:
      tags:
        - "News"
      summary: Get News by ID
      parameters:
        - in: path
          name: idNews
          required: true
          schema:
            type: integer
            format: int64
            example: 1
          description: News ID to return news
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/News"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404"

    delete:
      tags:
        - "News"
      summary: Delete News by ID
      parameters:
        - in: path
          name: idNews
          required: true
          schema:
            type: integer
            format: int64
            example: 1
          description: News ID to delete
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/200"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404"

  /api/v1/news/{idNews}/comments:
    get:
      tags:
        - "News"
      summary: Get all comments on the news
      parameters:
        - in: query
          name: Pageable
          required: false
          schema:
            $ref: "#/components/schemas/Pageable_comment"
          description: For pagination
        - in: path
          name: idNews
          required: true
          schema:
            type: integer
            format: int64
            example: 1
          description: News ID for return comments list
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Comment"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404"

    post:
      tags:
        - "News"
      summary: Add new comment in news
      parameters:
        - in: path
          name: idNews
          required: true
          schema:
            type: integer
            format: int64
            example: 1
          description: News ID for add new comment

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Comment_create"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404"

    put:
      tags:
        - "News"
      summary: Edit comment in news
      parameters:
        - in: path
          name: idNews
          required: true
          schema:
            type: integer
            format: int64
            example: 1
          description: News ID for edit comment

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Comment"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404"

  /api/v1/news/{idNews}/comments/{idComment}:
    get:
      tags:
        - "News"
      summary: Get comment by id with help news id
      parameters:
        - in: path
          name: idNews
          required: true
          schema:
            type: integer
            format: int64
            example: 1
          description: News ID for return news

        - in: path
          name: idComment
          required: true
          schema:
            type: integer
            format: int64
            example: 1
          description: Comment ID for return comment
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404"

    delete:
      tags:
        - "News"
      summary: Delete comment by Id with help news id
      parameters:
        - in: path
          name: idNews
          required: true
          schema:
            type: integer
            format: int64
            example: 1
          description: News ID for return news

        - in: path
          name: idComment
          required: true
          schema:
            type: integer
            format: int64
            example: 1
          description: Comment ID for return comment
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/200"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404"